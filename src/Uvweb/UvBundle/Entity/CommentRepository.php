<?php

namespace Uvweb\UvBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
	public function averageRate(Uv $uv) {

		$qb = $this->createQueryBuilder('c');

		$qb->select('AVG(c.globalRate) as globalRate')
		   ->where('c.moderated = :moderated')->setParameter('moderated', true)
		   ->andWhere('c.uv = :uv')->setParameter('uv', $uv);

		return $qb->getQuery()->getSingleScalarResult();

	}

	public function userAlreadyCommentedUv(User $user, Uv $uv)
	{
		$qb = $this->createQueryBuilder('c');
		
		$qb->where('c.author = :author')->setParameter('author', $user->getId())
		   ->andWhere('c.uv = :uv')->setParameter('uv', $uv->getId());

		$comment = $qb->getQuery()->getOneOrNullResult();

		return $comment !== null;
	}

	public function highlyRatedUvs($limit = 0)
	{
		$qb = $this->createQueryBuilder('c');

		$qb->select('AVG(c.globalRate) AS globalRate')
            ->addSelect('COUNT(c.globalRate) as commentCount')
            ->addSelect('u.name as name')
            ->join('c.uv', 'u')
		    ->where('c.moderated = :moderated')->setParameter('moderated', true)
		    ->groupBy('name')
            ->orderBy('globalRate', 'DESC');

        if($limit > 0)
        	$qb->setMaxResults($limit);

		return $qb->getQuery()->getResult();
	}
}
